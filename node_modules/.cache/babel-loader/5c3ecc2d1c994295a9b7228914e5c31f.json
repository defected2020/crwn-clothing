{"ast":null,"code":"// Import the functions you need from the SDKs you need\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore'; // Your web app's Firebase configuration\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDc_jwkxS90LvcFvlxn56Az9CsV1SdmbZk',\n  authDomain: 'crwn-clothing-db-f699d.firebaseapp.com',\n  projectId: 'crwn-clothing-db-f699d',\n  storageBucket: 'crwn-clothing-db-f699d.appspot.com',\n  messagingSenderId: '344036926244',\n  appId: '1:344036926244:web:5df3326ea98b87091dc9b1'\n}; // Initialize Firebase\n\nconst firebaseApp = initializeApp(firebaseConfig);\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async userAuth => {\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  console.log(userDocRef);\n  const userSnapshot = await getDoc(userDocRef);\n  console.log(userSnapshot);\n  console.log(userSnapshot.exists());\n\n  if (!userSnapshot.exist()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt\n      });\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  }\n\n  return userDocRef;\n};","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","provider","setCustomParameters","prompt","auth","signInWithGooglePopup","db","createUserDocumentFromAuth","userAuth","userDocRef","uid","console","log","userSnapshot","exists","exist","displayName","email","createdAt","Date","error","message"],"sources":["/Users/georgebeard/Documents/Learning/React/crwn-clothing/src/utils/firebase.utils.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from 'firebase/app';\n\nimport {\n  getAuth,\n  signInWithRedirect,\n  signInWithPopup,\n  GoogleAuthProvider,\n} from 'firebase/auth';\n\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDc_jwkxS90LvcFvlxn56Az9CsV1SdmbZk',\n  authDomain: 'crwn-clothing-db-f699d.firebaseapp.com',\n  projectId: 'crwn-clothing-db-f699d',\n  storageBucket: 'crwn-clothing-db-f699d.appspot.com',\n  messagingSenderId: '344036926244',\n  appId: '1:344036926244:web:5df3326ea98b87091dc9b1',\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\n\nconst provider = new GoogleAuthProvider();\n\nprovider.setCustomParameters({\n  prompt: 'select_account',\n});\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\n\nexport const db = getFirestore();\n\nexport const createUserDocumentFromAuth = async (userAuth) => {\n  const userDocRef = doc(db, 'users', userAuth.uid);\n\n  console.log(userDocRef);\n\n  const userSnapshot = await getDoc(userDocRef);\n  console.log(userSnapshot);\n  console.log(userSnapshot.exists());\n\n  if (!userSnapshot.exist()) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n      });\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  }\n\n  return userDocRef;\n};\n"],"mappings":"AAAA;AACA,SAASA,aAAT,QAA8B,cAA9B;AAEA,SACEC,OADF,EAEEC,kBAFF,EAGEC,eAHF,EAIEC,kBAJF,QAKO,eALP;AAOA,SAASC,YAAT,EAAuBC,GAAvB,EAA4BC,MAA5B,EAAoCC,MAApC,QAAkD,oBAAlD,C,CAEA;;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCADa;EAErBC,UAAU,EAAE,wCAFS;EAGrBC,SAAS,EAAE,wBAHU;EAIrBC,aAAa,EAAE,oCAJM;EAKrBC,iBAAiB,EAAE,cALE;EAMrBC,KAAK,EAAE;AANc,CAAvB,C,CASA;;AACA,MAAMC,WAAW,GAAGhB,aAAa,CAACS,cAAD,CAAjC;AAEA,MAAMQ,QAAQ,GAAG,IAAIb,kBAAJ,EAAjB;AAEAa,QAAQ,CAACC,mBAAT,CAA6B;EAC3BC,MAAM,EAAE;AADmB,CAA7B;AAIA,OAAO,MAAMC,IAAI,GAAGnB,OAAO,EAApB;AACP,OAAO,MAAMoB,qBAAqB,GAAG,MAAMlB,eAAe,CAACiB,IAAD,EAAOH,QAAP,CAAnD;AAEP,OAAO,MAAMK,EAAE,GAAGjB,YAAY,EAAvB;AAEP,OAAO,MAAMkB,0BAA0B,GAAG,MAAOC,QAAP,IAAoB;EAC5D,MAAMC,UAAU,GAAGnB,GAAG,CAACgB,EAAD,EAAK,OAAL,EAAcE,QAAQ,CAACE,GAAvB,CAAtB;EAEAC,OAAO,CAACC,GAAR,CAAYH,UAAZ;EAEA,MAAMI,YAAY,GAAG,MAAMtB,MAAM,CAACkB,UAAD,CAAjC;EACAE,OAAO,CAACC,GAAR,CAAYC,YAAZ;EACAF,OAAO,CAACC,GAAR,CAAYC,YAAY,CAACC,MAAb,EAAZ;;EAEA,IAAI,CAACD,YAAY,CAACE,KAAb,EAAL,EAA2B;IACzB,MAAM;MAAEC,WAAF;MAAeC;IAAf,IAAyBT,QAA/B;IACA,MAAMU,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;IAEA,IAAI;MACF,MAAM3B,MAAM,CAACiB,UAAD,EAAa;QACvBO,WADuB;QAEvBC,KAFuB;QAGvBC;MAHuB,CAAb,CAAZ;IAKD,CAND,CAME,OAAOE,KAAP,EAAc;MACdT,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCQ,KAAK,CAACC,OAA7C;IACD;EACF;;EAED,OAAOZ,UAAP;AACD,CAzBM"},"metadata":{},"sourceType":"module"}