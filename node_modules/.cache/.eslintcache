[{"/Users/georgebeard/Documents/Learning/React/crwn-clothing/src/index.js":"1","/Users/georgebeard/Documents/Learning/React/crwn-clothing/src/App.js":"2","/Users/georgebeard/Documents/Learning/React/crwn-clothing/src/components/category-item/CategoryItem.js":"3","/Users/georgebeard/Documents/Learning/React/crwn-clothing/src/routes/home/Home.js":"4","/Users/georgebeard/Documents/Learning/React/crwn-clothing/src/routes/navigation/Navigation.js":"5","/Users/georgebeard/Documents/Learning/React/crwn-clothing/src/routes/sign-in/signIn.js":"6","/Users/georgebeard/Documents/Learning/React/crwn-clothing/src/routes/sign-in/SignIn.js":"7","/Users/georgebeard/Documents/Learning/React/crwn-clothing/src/utils/firebase.utils.js":"8","/Users/georgebeard/Documents/Learning/React/crwn-clothing/src/components/directory/Directory.jsx":"9","/Users/georgebeard/Documents/Learning/React/crwn-clothing/src/components/sign-up-form/SignUpForm.js":"10","/Users/georgebeard/Documents/Learning/React/crwn-clothing/src/components/form-input/FormInput.jsx":"11","/Users/georgebeard/Documents/Learning/React/crwn-clothing/src/components/button/Button.js":"12"},{"size":348,"mtime":1653363735848,"results":"13","hashOfConfig":"14"},{"size":627,"mtime":1653389283931,"results":"15","hashOfConfig":"14"},{"size":449,"mtime":1653295578940,"results":"16","hashOfConfig":"14"},{"size":649,"mtime":1653647006268,"results":"17","hashOfConfig":"14"},{"size":697,"mtime":1653389354181,"results":"18","hashOfConfig":"14"},{"size":738,"mtime":1653451759492,"results":"19","hashOfConfig":"14"},{"size":539,"mtime":1653647009395,"results":"20","hashOfConfig":"14"},{"size":3537,"mtime":1653647829362,"results":"21","hashOfConfig":"14"},{"size":336,"mtime":1653647007806,"results":"22","hashOfConfig":"14"},{"size":2446,"mtime":1653730290820,"results":"23","hashOfConfig":"14"},{"size":428,"mtime":1653728329230,"results":"24","hashOfConfig":"14"},{"size":354,"mtime":1653730055448,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1r7jjvz",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/georgebeard/Documents/Learning/React/crwn-clothing/src/index.js",[],[],[],"/Users/georgebeard/Documents/Learning/React/crwn-clothing/src/App.js",[],[],"/Users/georgebeard/Documents/Learning/React/crwn-clothing/src/components/category-item/CategoryItem.js",[],[],"/Users/georgebeard/Documents/Learning/React/crwn-clothing/src/routes/home/Home.js",[],[],[],"/Users/georgebeard/Documents/Learning/React/crwn-clothing/src/routes/navigation/Navigation.js",[],[],"/Users/georgebeard/Documents/Learning/React/crwn-clothing/src/routes/sign-in/signIn.js",[],[],"/Users/georgebeard/Documents/Learning/React/crwn-clothing/src/routes/sign-in/SignIn.js",["66"],[],"/Users/georgebeard/Documents/Learning/React/crwn-clothing/src/utils/firebase.utils.js",["67"],[],"// Import the functions you need from the SDKs you need\nimport { initializeApp } from 'firebase/app';\n\nimport {\n  getAuth,\n  signInWithRedirect,\n  signInWithPopup,\n  GoogleAuthProvider,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from 'firebase/auth';\n\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDc_jwkxS90LvcFvlxn56Az9CsV1SdmbZk',\n  authDomain: 'crwn-clothing-db-f699d.firebaseapp.com',\n  projectId: 'crwn-clothing-db-f699d',\n  storageBucket: 'crwn-clothing-db-f699d.appspot.com',\n  messagingSenderId: '344036926244',\n  appId: '1:344036926244:web:5df3326ea98b87091dc9b1',\n};\n\nconst firebaseApp = initializeApp(firebaseConfig);\n\nconst googleProvider = new GoogleAuthProvider();\n\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account',\n});\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () =>\n  signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () =>\n  signInWithRedirect(auth, googleProvider);\n\nexport const db = getFirestore();\n\nexport const createUserDocumentFromAuth = async (\n  userAuth,\n  additionalInformation = {}\n) => {\n  if (!userAuth) return;\n\n  const userDocRef = doc(db, 'users', userAuth.uid);\n\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation,\n      });\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  }\n\n  return userDocRef;\n};\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\n\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n\n  return await signInWithEmailAndPassword(auth, email, password);\n};\n\n// Initialize Firebase\n// const firebaseApp = initializeApp(firebaseConfig);\n\n// const googleProvider = new GoogleAuthProvider();\n\n// googleProvider.setCustomParameters({\n//   prompt: 'select_account',\n// });\n\n// export const auth = getAuth();\n// export const signInWithGooglePopup = () =>\n//   signInWithPopup(auth, googleProvider);\n// export const signInWithGoogleRedirect = () =>\n//   signInWithRedirect(auth, googleProvider);\n\n// export const db = getFirestore();\n\n// export const createUserDocumentFromAuth = async (\n//   userAuth,\n//   additionalInformation\n// ) => {\n//   if (!userAuth) return;\n//   const userDocRef = doc(db, 'users', userAuth.uid);\n\n//   console.log(userDocRef);\n\n//   const userSnapshot = await getDoc(userDocRef);\n//   console.log(userSnapshot);\n//   console.log(userSnapshot.exists());\n\n//   if (!userSnapshot.exists()) {\n//     const { displayName, email } = userAuth;\n//     const createdAt = new Date();\n\n//     try {\n//       await setDoc(userDocRef, {\n//         displayName,\n//         email,\n//         createdAt,\n//         ...additionalInformation,\n//       });\n//     } catch (error) {\n//       console.log('error creating the user', error.message);\n//     }\n//   }\n\n//   return userDocRef;\n// };\n\n// export const createAuthUserWithEmailAndPassword = async (email, password) => {\n//   if (!email || !password) return;\n\n//   return await createUserWithEmailAndPassword(auth, email, password);\n// };\n","/Users/georgebeard/Documents/Learning/React/crwn-clothing/src/components/directory/Directory.jsx",[],[],"/Users/georgebeard/Documents/Learning/React/crwn-clothing/src/components/sign-up-form/SignUpForm.js",["68"],[],"import { useState } from 'react';\nimport FormInput from '../form-input/FormInput.jsx';\nimport './SignUpForm.scss';\nimport Button from '../button/Button.js';\n\nimport {\n  createAuthUserWithEmailAndPassword,\n  createUserDocumentFromAuth,\n} from '../../utils/firebase.utils.js';\n\nconst defaultFormFields = {\n  displayName: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n};\n\nconst SignUpForm = () => {\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const { displayName, email, password, confirmPassword } = formFields;\n\n  console.log(formFields);\n\n  const resetFormFields = () => {\n    setFormFields(defaultFormFields);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert('passwords do not match');\n      return;\n    }\n\n    try {\n      const { user } = createAuthUserWithEmailAndPassword(email, password);\n      await createUserDocumentFromAuth(user, { displayName });\n      resetFormFields();\n    } catch (error) {\n      if (error.code === 'auth/email-already-in-use') {\n        console.log('working');\n      } else {\n        console.log('user creation encountered an error', error);\n      }\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormFields({ ...formFields, [name]: value });\n  };\n\n  return (\n    <div className='sign-up-container'>\n      <h2>Don't have an account?</h2>\n      <span>Sign up with your email and password </span>\n      <form onSubmit={() => {}}>\n        <FormInput\n          label='Display Name'\n          type='text'\n          required\n          onChange={handleChange}\n          name='displayName'\n          value={displayName}\n        />\n\n        <FormInput\n          label='Email'\n          type='email'\n          required\n          onChange={handleChange}\n          name='email'\n          value={email}\n        />\n\n        <FormInput\n          label='Password'\n          type='password'\n          required\n          onChange={handleChange}\n          name='password'\n          value={password}\n        />\n        <FormInput\n          label='Confirm Password'\n          type='password'\n          required\n          onChange={handleChange}\n          name='confirmPassword'\n          value={confirmPassword}\n        />\n        <Button buttonType='google' type='submit'>\n          Submit\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default SignUpForm;\n","/Users/georgebeard/Documents/Learning/React/crwn-clothing/src/components/form-input/FormInput.jsx",[],[],"/Users/georgebeard/Documents/Learning/React/crwn-clothing/src/components/button/Button.js",[],[],{"ruleId":"69","severity":1,"message":"70","line":11,"column":11,"nodeType":"71","messageId":"72","endLine":11,"endColumn":21},{"ruleId":"69","severity":1,"message":"73","line":25,"column":7,"nodeType":"71","messageId":"72","endLine":25,"endColumn":18},{"ruleId":"69","severity":1,"message":"74","line":28,"column":9,"nodeType":"71","messageId":"72","endLine":28,"endColumn":21},"no-unused-vars","'userDocRef' is assigned a value but never used.","Identifier","unusedVar","'firebaseApp' is assigned a value but never used.","'handleSubmit' is assigned a value but never used."]